{"ast":null,"code":"import { reactive, ref } from \"vue\";\n//import api from \"@/api/APIs\";\n//import { useRouter } from \"vue-router\";\n//import { ElMessage } from \"element-plus\";\n//const router = useRouter();\n\nexport default {\n  __name: 'ResetPassword',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const resetPasswordFromRef = ref();\n    const resetPasswordForm = reactive({\n      token: \"\",\n      email: \"\",\n      password: \"\",\n      checkPassword: \"\"\n    });\n    const rules = ref({\n      password: [{\n        required: true,\n        message: \"Password cannot be null\",\n        trigger: \"blur\"\n      }],\n      checkPassword: [{\n        required: true,\n        message: \"Please enter your password again\",\n        trigger: \"blur\"\n      }]\n    });\n    function resetPasswordAction() {\n      let url = window.location.pathname.split('/'); //Get Url and split it into site/email/token\n      resetPasswordForm.email = url[2];\n      resetPasswordForm.token = url[3];\n      console.log(resetPasswordForm.email);\n      console.log(resetPasswordForm.token);\n      /*resetPasswordFromRef.value.validate((valid) => {\r\n      \tif (valid) {\r\n      \t\tif (resetPasswordForm.password === resetPasswordForm.checkPassword) {\r\n                     let url = window.location.pathname.split('/');//Get Url and split it into site/email/token\r\n                     resetPasswordForm.email=url[1];\r\n                     resetPasswordForm.token=url[2];\r\n      \t\t\tapi.resetPassword(resetPasswordForm).then((res) => {\r\n      \t\t\t\tif (res.status === 200) {\r\n      \t\t\t\t\trouter.push({ path: \"/login\" });\r\n      \t\t\t\t}\r\n      \t\t\t});\r\n      \t\t} else {\r\n      \t\t\tElMessage.error(\"Repeat password doesn't match\");\r\n      \t\t}\r\n      \t} else {\r\n      \t\treturn;\r\n      \t}\r\n      });*/\n    }\n\n    const __returned__ = {\n      resetPasswordFromRef,\n      resetPasswordForm,\n      rules,\n      resetPasswordAction,\n      reactive,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","ref","resetPasswordFromRef","resetPasswordForm","token","email","password","checkPassword","rules","required","message","trigger","resetPasswordAction","url","window","location","pathname","split","console","log"],"sources":["C:/Users/Realm/OneDrive/Documents/GitHub/CSIT321-SecBoard/secboardfront/src/components/ResetPassword.vue"],"sourcesContent":["<template>\r\n\t<div class=\"container\">\r\n\t\t<!-- <div class=\"loginBox\">\r\n\r\n\t\t</div> -->\r\n\t\t<el-form :model=\"resetPasswordForm\" class=\"resetPasswordForm\" :rules=\"rules\" ref=\"resetPasswordFromRef\">\r\n\t\t\t<div style=\"height: 50px; margin-top: 50px; display: flex\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img style=\"height: 50px; width: 50px\" src=\"../../public/Logo_1.png\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1 style=\"font-size: 50px; font-weight: 900\">SecBoard</h1>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n            <br/>\r\n\t\t\t<h3> Please enter your new password:</h3>\r\n\r\n\t\t\t<strong style=\"margin-top: 20px\">New password *</strong>\r\n\t\t\t<el-form-item prop=\"password\" style=\"height: 40px; width: 100%; border-radius: 10px\">\r\n\t\t\t\t<el-input v-model=\"resetPasswordForm.password\" type=\"password\" show-password style=\"border: 0; height: 100%; width: 100%; font-size: 20px\" placeholder=\"enter password\" color=\"#0D3A4A\" />\r\n\t\t\t</el-form-item>\r\n\r\n\t\t\t<strong style=\"margin-top: 20px\">Repeat new password *</strong>\r\n\t\t\t<el-form-item prop=\"checkPassword\" style=\"height: 40px; width: 100%; border-radius: 10px\">\r\n\t\t\t\t<el-input v-model=\"resetPasswordForm.checkPassword\" type=\"password\" show-password style=\"border: 0; height: 100%; width: 100%; font-size: 20px\" placeholder=\"enter password again\" color=\"#0D3A4A\" />\r\n\t\t\t</el-form-item>\r\n\r\n\t\t\t<div @click=\"resetPasswordAction(resetPasswordFromRef)\" style=\"border-radius: 10px; margin-top: 50px; display: flex; justify-content: center; align-items: center; background-color: #e6cec5; color: #0c3f51; height: 40px; cursor: pointer\">\r\n\t\t\t\t<strong>Reset password</strong>\r\n\t\t\t</div>\r\n\t\t</el-form>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from \"vue\";\r\n//import api from \"@/api/APIs\";\r\n//import { useRouter } from \"vue-router\";\r\n//import { ElMessage } from \"element-plus\";\r\n//const router = useRouter();\r\nconst resetPasswordFromRef = ref();\r\n\r\nconst resetPasswordForm = reactive({\r\n\ttoken: \"\",\r\n\temail: \"\",\r\n\tpassword: \"\",\r\n\tcheckPassword: \"\",\r\n});\r\n\r\nconst rules = ref({\r\n\tpassword: [\r\n\t\t{\r\n\t\t\trequired: true,\r\n\t\t\tmessage: \"Password cannot be null\",\r\n\t\t\ttrigger: \"blur\",\r\n\t\t},\r\n\t],\r\n\tcheckPassword: [\r\n\t\t{\r\n\t\t\trequired: true,\r\n\t\t\tmessage: \"Please enter your password again\",\r\n\t\t\ttrigger: \"blur\",\r\n\t\t},\r\n\t],\r\n});\r\n\r\nfunction resetPasswordAction() {\r\n    let url = window.location.pathname.split('/');//Get Url and split it into site/email/token\r\n                resetPasswordForm.email=url[2];\r\n                resetPasswordForm.token=url[3];\r\n                console.log(resetPasswordForm.email);\r\n                console.log(resetPasswordForm.token);\r\n\t/*resetPasswordFromRef.value.validate((valid) => {\r\n\t\tif (valid) {\r\n\t\t\tif (resetPasswordForm.password === resetPasswordForm.checkPassword) {\r\n                let url = window.location.pathname.split('/');//Get Url and split it into site/email/token\r\n                resetPasswordForm.email=url[1];\r\n                resetPasswordForm.token=url[2];\r\n\t\t\t\tapi.resetPassword(resetPasswordForm).then((res) => {\r\n\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\trouter.push({ path: \"/login\" });\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tElMessage.error(\"Repeat password doesn't match\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t});*/\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n\twidth: 100%;\r\n\theight: 100vh;\r\n\tbackground-color: #0c3f51;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n/* .loginBox {\r\n\theight: 100%;\r\n\twidth: 40%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tcolor: white;\r\n} */\r\n.resetPasswordForm {\r\n\theight: 100%;\r\n\twidth: 40%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tcolor: white;\r\n}\r\n</style>\r\n"],"mappings":"AAmCA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AACnC;AACA;AACA;AACA;;;;;;;;IACA,MAAMC,oBAAoB,GAAGD,GAAG,EAAE;IAElC,MAAME,iBAAiB,GAAGH,QAAQ,CAAC;MAClCI,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE;IAChB,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGP,GAAG,CAAC;MACjBK,QAAQ,EAAE,CACT;QACCG,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,yBAAyB;QAClCC,OAAO,EAAE;MACV,CAAC,CACD;MACDJ,aAAa,EAAE,CACd;QACCE,QAAQ,EAAE,IAAI;QACdC,OAAO,EAAE,kCAAkC;QAC3CC,OAAO,EAAE;MACV,CAAC;IAEH,CAAC,CAAC;IAEF,SAASC,mBAAmBA,CAAA,EAAG;MAC3B,IAAIC,GAAG,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC;MAClCd,iBAAiB,CAACE,KAAK,GAACQ,GAAG,CAAC,CAAC,CAAC;MAC9BV,iBAAiB,CAACC,KAAK,GAACS,GAAG,CAAC,CAAC,CAAC;MAC9BK,OAAO,CAACC,GAAG,CAAChB,iBAAiB,CAACE,KAAK,CAAC;MACpCa,OAAO,CAACC,GAAG,CAAChB,iBAAiB,CAACC,KAAK,CAAC;MACnD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}