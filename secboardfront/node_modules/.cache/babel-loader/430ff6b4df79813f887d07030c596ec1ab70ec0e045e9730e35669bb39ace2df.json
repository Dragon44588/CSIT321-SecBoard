{"ast":null,"code":"import axios from \"axios\";\nimport { ElMessage } from \"element-plus\";\n// import { el } from \"element-plus/es/locale\";\n\nconst Service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  headers: {\n    \"Content-Type\": \"multipart/form-data\"\n  },\n  timeout: 5000\n});\n\n//Request interceptor\nService.interceptors.request.use(config => {\n  // config.headers.common[\"Authorization\"] = window.sessionStorage.getItem(\"token\") === null ? null : window.sessionStorage.getItem(\"token\");\n  config.headers.Authorization = window.sessionStorage.getItem(\"token\");\n  return config;\n});\n\n//Response interceptor\nService.interceptors.response.use(response => {\n  const res = response.data;\n  if (res.status !== 201) {\n    if (res.status === 200) {\n      ElMessage({\n        message: res.message,\n        type: \"success\"\n      });\n      return res;\n    } else {\n      ElMessage.error(res.message || \"SOMETHING WRONG\");\n      return res;\n    }\n  } else {\n    return res;\n  }\n});\nexport default Service;","map":{"version":3,"names":["axios","ElMessage","Service","create","baseURL","process","env","VUE_APP_BASE_API","headers","timeout","interceptors","request","use","config","Authorization","window","sessionStorage","getItem","response","res","data","status","message","type","error"],"sources":["C:/Users/Realm/Documents/GitHub/CSIT321-SecBoard/secboardfront/src/api/config.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { ElMessage } from \"element-plus\";\r\n// import { el } from \"element-plus/es/locale\";\r\n\r\nconst Service = axios.create({\r\n\tbaseURL: process.env.VUE_APP_BASE_API,\r\n\theaders: {\r\n\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t},\r\n\ttimeout: 5000,\r\n});\r\n\r\n//Request interceptor\r\nService.interceptors.request.use((config) => {\r\n\t// config.headers.common[\"Authorization\"] = window.sessionStorage.getItem(\"token\") === null ? null : window.sessionStorage.getItem(\"token\");\r\n\tconfig.headers.Authorization = window.sessionStorage.getItem(\"token\");\r\n\treturn config;\r\n});\r\n\r\n//Response interceptor\r\nService.interceptors.response.use((response) => {\r\n\tconst res = response.data;\r\n\tif (res.status !== 201) {\r\n\t\tif (res.status === 200) {\r\n\t\t\tElMessage({\r\n\t\t\t\tmessage: res.message,\r\n\t\t\t\ttype: \"success\",\r\n\t\t\t});\r\n\t\t\treturn res;\r\n\t\t} else {\r\n\t\t\tElMessage.error(res.message || \"SOMETHING WRONG\");\r\n\t\t\treturn res;\r\n\t\t}\r\n\t} else {\r\n\t\treturn res;\r\n\t}\r\n});\r\n\r\nexport default Service;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AACxC;;AAEA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC5BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,gBAAgB;EACrCC,OAAO,EAAE;IACR,cAAc,EAAE;EACjB,CAAC;EACDC,OAAO,EAAE;AACV,CAAC,CAAC;;AAEF;AACAP,OAAO,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC5C;EACAA,MAAM,CAACL,OAAO,CAACM,aAAa,GAAGC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EACrE,OAAOJ,MAAM;AACd,CAAC,CAAC;;AAEF;AACAX,OAAO,CAACQ,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAAEM,QAAQ,IAAK;EAC/C,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACzB,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;IACvB,IAAIF,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;MACvBpB,SAAS,CAAC;QACTqB,OAAO,EAAEH,GAAG,CAACG,OAAO;QACpBC,IAAI,EAAE;MACP,CAAC,CAAC;MACF,OAAOJ,GAAG;IACX,CAAC,MAAM;MACNlB,SAAS,CAACuB,KAAK,CAACL,GAAG,CAACG,OAAO,IAAI,iBAAiB,CAAC;MACjD,OAAOH,GAAG;IACX;EACD,CAAC,MAAM;IACN,OAAOA,GAAG;EACX;AACD,CAAC,CAAC;AAEF,eAAejB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}